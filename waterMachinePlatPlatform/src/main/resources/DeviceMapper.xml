<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--Mapper元素只有一个属性namespace，它有两个作用：一是用于区分不同的mapper（在不同的mapper文件里，子元素的id可以相同，mybatis通过namespace和子元素的id联合区分），
二是与接口关联（应用程序通过接口访问mybatis时，mybatis通过接口的完整名称查找对应的mapper配置，因此namespace的命名务必小心一定要某接口同名）。
此外，mapper配置文件还有几个顶级子元素（它们须按照顺序定义）-->

<!--与mapper中的接口完全对应-->
<mapper namespace="com.terabits.mapper.DeviceMapper">

    <resultMap id="deviceSupplyRecordMap" type="com.terabits.meta.vo.DeviceSupplyRecordVO">
        <result property="displayid" column="displayid" javaType="java.lang.String"></result>
        <result property="location" column="location" javaType="java.lang.String"></result>
        <result property="payment" column="payment" javaType="java.lang.Double"></result>
        <result property="flow" column="flow" javaType="java.lang.Double"></result>
        <result property="time" column="time" javaType="java.lang.String"></result>
    </resultMap>
    
    <resultMap id="deviceOfflineAlarmMap" type="com.terabits.meta.vo.DeviceOfflineAlarmVO">
        <result property="displayid" column="displayid" javaType="java.lang.String"></result>
        <result property="location" column="location" javaType="java.lang.String"></result>
        <result property="simId" column="simid" javaType="java.lang.String"></result>
        <result property="imei" column="imei" javaType="java.lang.String"></result>
        <result property="lastConnectTime" column="lastConnectTime" javaType="java.lang.String"></result>
        <result property="offlineTime" column="offlineTime" javaType="java.lang.Integer"></result>
    </resultMap>

    <select id="selectDisplayIdByAdmin" resultType="java.lang.String">
        select displayid from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				terminal
			</when>
			<otherwise>
				terminal_admin where admin_name=#{name}
			</otherwise>
        </choose>
    </select>
    
    <select id="selectDeviceNumberByAdmin" resultType="java.lang.Integer">
    	select count(*) from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				terminal
			</when>
			<otherwise>
				terminal_admin where admin_name=#{name}
			</otherwise>
        </choose>
    </select>
    
    <select id="selectTotalSupplyDayByAdmin" resultType="java.lang.Double">
    	select sum(consumeorder.flow) from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				consumeorder where to_days(gmtcreate) = to_days(now());
			</when>
			<otherwise>
				consumeorder, terminal_admin 
				where consumeorder.displayid=terminal_admin.displayid 
					and terminal_admin.admin_name=#{name} 
					and to_days(consumeorder.gmtcreate) = to_days(now());
			</otherwise>
        </choose>
    </select>
    
    <select id="selectTotalSupplyMonthByAdmin" resultType="java.lang.Double">
    	select sum(consumeorder.flow) from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				consumeorder where DATE_FORMAT(consumeorder.gmtcreate, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' );
			</when>
			<otherwise>
				consumeorder, terminal_admin 
				where consumeorder.displayid=terminal_admin.displayid 
					and terminal_admin.admin_name=#{name} 
					and DATE_FORMAT(consumeorder.gmtcreate, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' );
			</otherwise>
        </choose>
    </select>
    
    <select id="selectTotalIncomeDayByAdmin" resultType="java.lang.Double">
    	select sum(consumeorder.payment) from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				consumeorder where to_days(gmtcreate) = to_days(now());
			</when>
			<otherwise>
				consumeorder, terminal_admin 
				where consumeorder.displayid=terminal_admin.displayid 
					and terminal_admin.admin_name=#{name} 
					and to_days(consumeorder.gmtcreate) = to_days(now());
			</otherwise>
        </choose>
    </select>
    
    <select id="selectTotalIncomeMonthByAdmin" resultType="java.lang.Double">
    	select sum(consumeorder.payment) from 
        <choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				consumeorder where DATE_FORMAT(consumeorder.gmtcreate, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' );
			</when>
			<otherwise>
				consumeorder, terminal_admin 
				where consumeorder.displayid=terminal_admin.displayid 
					and terminal_admin.admin_name=#{name} 
					and DATE_FORMAT(consumeorder.gmtcreate, '%Y%m' ) = DATE_FORMAT( CURDATE( ) , '%Y%m' );
			</otherwise>
        </choose>
    </select>
    
    <select id="selectDeviceSupplyRecordByAdmin" resultMap="deviceSupplyRecordMap">
    	select consumeorder.displayid as displayid, terminal.location as location, consumeorder.payment as payment, 
    		consumeorder.flow as flow, consumeorder.gmtcreate as time from 
    	<choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				consumeorder, terminal 
				where consumeorder.displayid=terminal.displayid 
					and consumeorder.gmtcreate >= #{beginTime}
					and consumeorder.gmtcreate &lt;= #{endTime};
			</when>
			<otherwise>
				consumeorder, terminal, terminal_admin 
				where consumeorder.displayid=terminal_admin.displayid 
					and consumeorder.displayid=terminal.displayid
					and terminal_admin.admin_name=#{name} 
					and consumeorder.gmtcreate >= #{beginTime}
					and consumeorder.gmtcreate &lt;= #{endTime};
			</otherwise>
        </choose>
    </select>
    
    <select id="selectDeviceOfflineAlarmByAdmin" resultMap="deviceOfflineAlarmMap">
    	select terminal.displayid as displayid, terminal.location as location, terminal.simid as simid, terminal.imei as imei, 
    		terminalofflinerecord.gmtcreate as lastConnectTime, 
    		UNIX_TIMESTAMP(terminalofflinerecord.gmtmodified) - UNIX_TIMESTAMP(terminalofflinerecord.gmtcreate) as offlineTime from 
    	<choose>
        	<when test="type==1 || type==2 || type==3 || type==4">
				terminal, terminalofflinerecord 
				where terminal.imei=terminalofflinerecord.imei 
					and terminalofflinerecord.gmtcreate >= #{beginTime}
					and terminalofflinerecord.gmtcreate &lt;= #{endTime};
			</when>
			<otherwise>
				terminal, terminalofflinerecord, terminal_admin 
				where terminal.displayid=terminal_admin.displayid 
					and terminal.imei=terminalofflinerecord.imei
					and terminal_admin.admin_name=#{name} 
					and terminalofflinerecord.gmtcreate >= #{beginTime}
					and terminalofflinerecord.gmtcreate &lt;= #{endTime};
			</otherwise>
        </choose>
    </select>
</mapper>